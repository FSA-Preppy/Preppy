[{"/home/chad/Projects/Preppy/src/index.js":"1","/home/chad/Projects/Preppy/src/serviceWorkerRegistration.js":"2","/home/chad/Projects/Preppy/src/reportWebVitals.js":"3","/home/chad/Projects/Preppy/src/components/App.js":"4","/home/chad/Projects/Preppy/src/fbase.js":"5","/home/chad/Projects/Preppy/src/components/Routes.js":"6","/home/chad/Projects/Preppy/src/components/Navigation.js":"7","/home/chad/Projects/Preppy/src/routes/Home.js":"8","/home/chad/Projects/Preppy/src/routes/Auth.js":"9","/home/chad/Projects/Preppy/src/components/Search.js":"10","/home/chad/Projects/Preppy/src/components/Image.js":"11"},{"size":828,"mtime":1612303931451,"results":"12","hashOfConfig":"13"},{"size":5064,"mtime":1612112190075,"results":"14","hashOfConfig":"13"},{"size":364,"mtime":1612112190075,"results":"15","hashOfConfig":"13"},{"size":1057,"mtime":1612303931451,"results":"16","hashOfConfig":"13"},{"size":673,"mtime":1612303931451,"results":"17","hashOfConfig":"13"},{"size":894,"mtime":1612303931451,"results":"18","hashOfConfig":"13"},{"size":238,"mtime":1612303931451,"results":"19","hashOfConfig":"13"},{"size":519,"mtime":1612306938029,"results":"20","hashOfConfig":"13"},{"size":6319,"mtime":1612303931451,"results":"21","hashOfConfig":"13"},{"size":3264,"mtime":1612374436967,"results":"22","hashOfConfig":"13"},{"size":1500,"mtime":1612303931451,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"197ur7p",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/home/chad/Projects/Preppy/src/index.js",[],["50","51"],"/home/chad/Projects/Preppy/src/serviceWorkerRegistration.js",[],"/home/chad/Projects/Preppy/src/reportWebVitals.js",[],"/home/chad/Projects/Preppy/src/components/App.js",[],"/home/chad/Projects/Preppy/src/fbase.js",[],"/home/chad/Projects/Preppy/src/components/Routes.js",["52","53","54"],"import { auth } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\n//You can also get the currently signed-in user by using the currentUser property. If a user isn't signed in, currentUser is null:\nimport { authService } from \"fbase\";\nimport Navigation from \"./Navigation\";\n\nconst Routes = ({ isLoggedIn }) => {\n  // console.log(authService.currentUser) this will return \"null\"\n\n  return (\n    <Router>\n      {isLoggedIn && <Navigation />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </>\n        ) : (\n          <Route>\n            <Auth exact path=\"/\" />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","/home/chad/Projects/Preppy/src/components/Navigation.js",[],"/home/chad/Projects/Preppy/src/routes/Home.js",[],"/home/chad/Projects/Preppy/src/routes/Auth.js",["55","56"],"import { authService, firebaseInstance } from \"fbase\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../assets/authstyle.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (evt) => {\n    const {\n      target: { name, value },\n    } = evt;\n    if (name === \"email\") setEmail(value);\n    else if (name === \"password\") setPassword(value);\n  };\n\n  const onSubmit = async (evt) => {\n    try {\n      evt.preventDefault();\n\n      const {\n        target: { value },\n      } = evt;\n\n      let data;\n      if (newAccount) {\n        console.log(\"test\");\n        //If the new account was created, the user is signed in automatically.\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onClickWithSocial = async (evt) => {\n    const {\n      target: { name },\n    } = evt;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setNewAccount(!newAccount);\n  };\n\n  //CSS related functions*****\n  useEffect(() => {\n    const sign_in_btn = document.querySelector(\"#sign-in-btn\");\n    const sign_up_btn = document.querySelector(\"#sign-up-btn\");\n    const container = document.querySelector(\".container\");\n    sign_up_btn.addEventListener(\"click\", () => {\n      container.classList.add(\"sign-up-mode\");\n    });\n    sign_in_btn.addEventListener(\"click\", () => {\n      container.classList.remove(\"sign-up-mode\");\n    });\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"forms-container\">\n        <div className=\"signin-signup\">\n          <form onSubmit={onSubmit} className=\"sign-in-form\">\n            <h2 className=\"title\">\n              <img\n                className=\"preppy-logo\"\n                src=\"https://firebasestorage.googleapis.com/v0/b/preppy-food.appspot.com/o/PreppyLogo3.png?alt=media&token=363494e0-ffbb-4da8-8da9-110c6304e564\"\n                alt=\"Preppy\"\n              />\n              Sign in\n            </h2>\n            <div className=\"input-field\">\n              <i className=\"fas fa-envelope\"></i>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n            <span>{error}</span>\n            <div className=\"input-field\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange}\n              />\n            </div>\n            <input\n              type=\"submit\"\n              value=\"Log In\"\n              className=\"btn solid\"\n              required\n            />\n            <p className=\"social-text\">Or Sign in with Google</p>\n            <div className=\"social-media\">\n              <button\n                className=\"social-icon\"\n                name=\"google\"\n                onClick={onClickWithSocial}\n              >\n                <i className=\"fab fa-google\"></i>\n              </button>\n            </div>\n          </form>\n          <form onSubmit={onSubmit} className=\"sign-up-form\" value=\"signup\">\n            <h2 className=\"title\">\n              <img\n                className=\"preppy-logo\"\n                src=\"https://firebasestorage.googleapis.com/v0/b/preppy-food.appspot.com/o/PreppyLogo3.png?alt=media&token=363494e0-ffbb-4da8-8da9-110c6304e564\"\n                alt=\"Preppy\"\n              />\n              Sign up\n            </h2>\n            <div className=\"input-field\">\n              <i className=\"fas fa-envelope\"></i>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n            <span>{error}</span>\n            <div className=\"input-field\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n\n      <div className=\"panels-container\">\n        <div className=\"panel left-panel\">\n          <div className=\"content\">\n            <h3>New here ?</h3>\n            <p>Sign up here, and start with Preppy today!</p>\n            <button\n              className=\"btn transparent\"\n              id=\"sign-up-btn\"\n              onClick={() => reset()}\n            >\n              Sign up\n            </button>\n          </div>\n          <img\n            src=\"https://firebasestorage.googleapis.com/v0/b/preppy-food.appspot.com/o/chefNoBG.png?alt=media&token=a985e22d-c41c-4eab-9d7d-afdceea0da11\"\n            className=\"image\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"panel right-panel\">\n          <div className=\"content\">\n            <h3>One of us ?</h3>\n            <p>Sign in here, and starting preppin' your recipes with Preppy!</p>\n            <button\n              className=\"btn transparent\"\n              id=\"sign-in-btn\"\n              onClick={() => reset()}\n            >\n              Sign in\n            </button>\n          </div>\n          <img\n            src=\"https://firebasestorage.googleapis.com/v0/b/preppy-food.appspot.com/o/signinNoBG.png?alt=media&token=895f759f-551d-4513-ae7e-bf5305c3ba3e\"\n            className=\"image\"\n            alt=\"\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","/home/chad/Projects/Preppy/src/components/Search.js",["57","58","59"],"/home/chad/Projects/Preppy/src/components/Image.js",["60"],"import React, { useState } from \"react\";\nimport { storageService } from \"fbase\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\n\nconst Image = () => {\n  const { register, handleSubmit } = useForm();\n  //   console.log(document.getElementById(\"videoFile\"));\n  const onFileChange = async (data) => {\n    try {\n      const storageRef = storageService.ref();\n      const fileRef = storageRef.child(data.image[0].name);\n      const upload = await fileRef.put(data.image[0]);\n      const url = await upload.ref.getDownloadURL();\n      console.log(upload);\n      if (upload) {\n        console.log(\"Uploaded the File\");\n        const { data } = await axios.get(\n          `https://api.spoonacular.com/food/images/analyze`,\n          {\n            params: {\n              apiKey: \"90fcba9c343249e8b9f8982669437c5c\",\n              imageUrl: url,\n            },\n          }\n        );\n        console.log({ data });\n        // if (data) upload.ref.delete()\n        window.alert(data.category.name);\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <>\n      <div></div>\n      <form onSubmit={handleSubmit(onFileChange)}>\n        <label htmlFor=\"videoFile\">Upload a video:</label>\n        <input\n          ref={register}\n          type=\"file\"\n          name=\"image\"\n          id=\"videoFile\"\n          capture=\"environment\"\n          accept=\"camera/*\"\n        />\n        <input type=\"submit\" />\n      </form>\n    </>\n  );\n};\nexport default Image;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":2,"column":17,"nodeType":"67","messageId":"68","endLine":2,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":21},{"ruleId":"65","severity":1,"message":"71","line":24,"column":19,"nodeType":"67","messageId":"68","endLine":24,"endColumn":24},{"ruleId":"65","severity":1,"message":"72","line":36,"column":9,"nodeType":"67","messageId":"68","endLine":36,"endColumn":13},{"ruleId":"65","severity":1,"message":"73","line":12,"column":10,"nodeType":"67","messageId":"68","endLine":12,"endColumn":14},{"ruleId":"65","severity":1,"message":"74","line":72,"column":5,"nodeType":"67","messageId":"68","endLine":72,"endColumn":15},{"ruleId":"65","severity":1,"message":"75","line":89,"column":7,"nodeType":"67","messageId":"68","endLine":89,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'authService' is defined but never used.","'value' is assigned a value but never used.","'data' is assigned a value but never used.","'item' is assigned a value but never used.","'QuaggaInit' is assigned a value but never used.","'_scannerIsRunning' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]