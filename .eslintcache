[{"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/index.js":"1","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/reportWebVitals.js":"2","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/serviceWorkerRegistration.js":"3","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/App.js":"4","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/fbase.js":"5","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Routes.js":"6","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Search.js":"7","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Image.js":"8","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/config/firebaseConfig.js":"9","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Auth.js":"10","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Home.js":"11","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/NavBar.js":"12","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/index.js":"13","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/user.js":"14","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/ingredients.js":"15"},{"size":951,"mtime":1612382780704,"results":"16","hashOfConfig":"17"},{"size":364,"mtime":1612290202983,"results":"18","hashOfConfig":"17"},{"size":5064,"mtime":1612290202990,"results":"19","hashOfConfig":"17"},{"size":847,"mtime":1612382780687,"results":"20","hashOfConfig":"17"},{"size":396,"mtime":1612372559758,"results":"21","hashOfConfig":"17"},{"size":785,"mtime":1612372559750,"results":"22","hashOfConfig":"17"},{"size":3269,"mtime":1612382780697,"results":"23","hashOfConfig":"17"},{"size":2073,"mtime":1612393832131,"results":"24","hashOfConfig":"17"},{"size":347,"mtime":1612371552686,"results":"25","hashOfConfig":"17"},{"size":5766,"mtime":1612372559747,"results":"26","hashOfConfig":"17"},{"size":501,"mtime":1612382780688,"results":"27","hashOfConfig":"17"},{"size":210,"mtime":1612372559749,"results":"28","hashOfConfig":"17"},{"size":612,"mtime":1612390964950,"results":"29","hashOfConfig":"17"},{"size":276,"mtime":1612382780711,"results":"30","hashOfConfig":"17"},{"size":842,"mtime":1612393897973,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"j0stx2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/index.js",[],["68","69"],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/reportWebVitals.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/serviceWorkerRegistration.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/App.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport { authService } from \"../fbase\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../store\";\n\nfunction App(props) {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        props.setUser(user.uid);\n      } else setIsLoggedIn(false);\n      setInit(true);\n    });\n  }, []);\n\n  return <>{init ? <Routes isLoggedIn={isLoggedIn} /> : \"Loading...\"}</>;\n}\n\nconst mapState = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    setUser: (user) => dispatch(setUser(user)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/fbase.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Routes.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Search.js",["71","72","73"],"import React, { useState } from \"react\";\nimport Quagga from \"quagga\";\n\n//todo, replace axios calls with thunks; manually add items(possibly with autocomplete via an); add items using returned barcode information\n\nconst Search = () => {\n  let codeCollection = [];\n  let _scannerIsRunning = false;\n  let QuaggaInit = false;\n\n  //console.log(document.getElementById('videoFile'));\n  //const [recipeData, setRecipeData] = useState(null);\n  const [item, setItem] = useState(\"\");\n\n  function handleChange(e) {\n    setItem(e.target.value);\n  }\n\n  function handleSubmit() {\n    //todo: add function for manually submitting food item to users fridge collection\n  }\n\n  function getProduct(code) {\n    fetch(\n      `https://api.edamam.com/api/food-database/v2/parser?upc=${code}&app_id=2b951423&app_key=\n      0a3f7f60c2858ebe6e8ed1059ef0052e`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch(() => {\n        console.log(\"error returning product via upc\");\n      });\n  }\n\n\n  function getBarCode() {\n    let toggle = document.getElementById('scanner');\n\n    toggle.style.display = 'block';\n    console.log('init starting');\n\n\n    Quagga.init(\n      {\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: document.getElementById(\"scanner\"),\n          constraints: {\n            width: 480,\n            height: 320,\n            facingMode: \"environment\",\n          },\n          frequency: 1,\n        },\n        decoder: {\n          readers: [\"upc_reader\"],\n        },\n      },\n      function (err) {\n        if (err) {\n          console.log(err);\n          return;\n        }\n\n        console.log(\"Initialization finished. Ready to start\");\n        Quagga.start();\n\n        // Set flag to is running\n        _scannerIsRunning = true;\n      }\n    );\n    QuaggaInit = true;\n\n\n    Quagga.onDetected(function (result) {\n      //TODO: scanner currently returns current + all prior scans on each scan, only want current\n      //TODO: scanner should close frame after scanning is complete\n      let code = result.codeResult.code;\n      codeCollection.push(code);\n      console.log(\n        'Barcode detected and processed : [' + code + ']',\n        result,\n        typeof result.codeResult.code\n        //query spoonacular for the product\n      );\n      Quagga.stop();\n      getProduct(codeCollection[0]);\n      codeCollection = codeCollection.slice(0, 1);\n      toggle.style.display = 'none';\n      _scannerIsRunning = false;\n\n    });\n  }\n\n  return (\n    <div>\n      <header className=\"scan-header\">\n        <button\n          id=\"scanButton\"\n          onClick={() => {\n            // if (_scannerIsRunning) {\n            //   Quagga.stop();\n            //   _scannerIsRunning = false;\n            // } else {\n            getBarCode();\n          }}\n        >\n          Start/Stop Scan\n        </button>\n        <div id=\"scanner\"></div>\n      </header>\n      <div>\n        <input\n          type=\"string\"\n          placeholder=\"food item name\"\n          onChange={handleChange}\n          onSubmit={handleSubmit}\n        />\n        {/* <div>\n            <button onClick={getRecipe}>Get Recipe</button>\n          </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Image.js",["74","75"],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/config/firebaseConfig.js",["76"],"export default {\n  apiKey: \"AIzaSyDnLE7T7WRPqnLrYxu-s-jKBJxAKpICLWo\",\n  authDomain: \"preppy-food.firebaseapp.com\",\n  databaseURL: \"https://preppy-food-default-rtdb.firebaseio.com\",\n  projectId: \"preppy-food\",\n  storageBucket: \"preppy-food.appspot.com\",\n  messagingSenderId: \"901609858958\",\n  appId: \"1:901609858958:web:bc80a1eaab1295cca0a6df\",\n};\n","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Auth.js",["77","78"],"import { authService, firebaseInstance } from \"../fbase\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/authstyle.css\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (evt) => {\n    const {\n      target: { name, value },\n    } = evt;\n    if (name === \"email\") setEmail(value);\n    else if (name === \"password\") setPassword(value);\n  };\n\n  const onSubmit = async (evt) => {\n    try {\n      evt.preventDefault();\n\n      const {\n        target: { value },\n      } = evt;\n\n      let data;\n      if (newAccount) {\n        console.log(\"test\");\n        //If the new account was created, the user is signed in automatically.\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const onClickWithSocial = async (evt) => {\n    const {\n      target: { name },\n    } = evt;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  const reset = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n    setNewAccount(!newAccount);\n  };\n\n  //CSS related functions*****\n  useEffect(() => {\n    const sign_in_btn = document.querySelector(\"#sign-in-btn\");\n    const sign_up_btn = document.querySelector(\"#sign-up-btn\");\n    const container = document.querySelector(\".container\");\n    sign_up_btn.addEventListener(\"click\", () => {\n      container.classList.add(\"sign-up-mode\");\n    });\n    sign_in_btn.addEventListener(\"click\", () => {\n      container.classList.remove(\"sign-up-mode\");\n    });\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"forms-container\">\n        <div className=\"signin-signup\">\n          <form onSubmit={onSubmit} className=\"sign-in-form\">\n            <h2 className=\"title\">\n              <img\n                className=\"preppy-logo\"\n                src=\"images/PreppyLogo3.png\"\n                alt=\"Preppy\"\n              />\n              Sign in\n            </h2>\n            <div className=\"input-field\">\n              <i className=\"fas fa-envelope\"></i>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n            <span>{error}</span>\n            <div className=\"input-field\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange}\n              />\n            </div>\n            <input\n              type=\"submit\"\n              value=\"Log In\"\n              className=\"btn solid\"\n              required\n            />\n            <p className=\"social-text\">Or Sign in with Google</p>\n            <div className=\"social-media\">\n              <button\n                className=\"social-icon\"\n                name=\"google\"\n                onClick={onClickWithSocial}\n              >\n                <i className=\"fab fa-google\"></i>\n              </button>\n            </div>\n          </form>\n          <form onSubmit={onSubmit} className=\"sign-up-form\" value=\"signup\">\n            <h2 className=\"title\">\n              <img\n                className=\"preppy-logo\"\n                src=\"images/PreppyLogo3.png\"\n                alt=\"Preppy\"\n              />\n              Sign up\n            </h2>\n            <div className=\"input-field\">\n              <i className=\"fas fa-envelope\"></i>\n              <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n              />\n            </div>\n            <span>{error}</span>\n            <div className=\"input-field\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn\">\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </div>\n\n      <div className=\"panels-container\">\n        <div className=\"panel left-panel\">\n          <div className=\"content\">\n            <h3>New here ?</h3>\n            <p>Sign up here, and start with Preppy today!</p>\n            <button\n              className=\"btn transparent\"\n              id=\"sign-up-btn\"\n              onClick={() => reset()}\n            >\n              Sign up\n            </button>\n          </div>\n          <img src=\"images/chefNoBG.png\" className=\"image\" alt=\"\" />\n        </div>\n        <div className=\"panel right-panel\">\n          <div className=\"content\">\n            <h3>One of us ?</h3>\n            <p>Sign in here, and starting preppin' your recipes with Preppy!</p>\n            <button\n              className=\"btn transparent\"\n              id=\"sign-in-btn\"\n              onClick={() => reset()}\n            >\n              Sign in\n            </button>\n          </div>\n          <img src=\"images/signinNoBG.png\" className=\"image\" alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/Home.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/components/NavBar.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/index.js",[],"/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/user.js",["79","80"],"import axios from \"axios\";\n\nconst SET_USER = \"SET_USER\";\n\nexport const setUser = (user) => ({ type: SET_USER, user });\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","/Users/eddie/FullStackAcademy/seniorPhase/Projects/Preppy/src/store/ingredients.js",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":19,"column":6,"nodeType":"89","endLine":19,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":10,"nodeType":"93","messageId":"94","endLine":13,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":75,"column":5,"nodeType":"93","messageId":"94","endLine":75,"endColumn":15},{"ruleId":"91","severity":1,"message":"96","line":93,"column":7,"nodeType":"93","messageId":"94","endLine":93,"endColumn":24},{"ruleId":"91","severity":1,"message":"97","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":13,"column":6,"nodeType":"89","endLine":13,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":1,"nodeType":"101","endLine":9,"endColumn":3},{"ruleId":"91","severity":1,"message":"102","line":24,"column":19,"nodeType":"93","messageId":"94","endLine":24,"endColumn":24},{"ruleId":"91","severity":1,"message":"103","line":36,"column":9,"nodeType":"93","messageId":"94","endLine":36,"endColumn":13},{"ruleId":"91","severity":1,"message":"104","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"105","line":7,"column":1,"nodeType":"101","endLine":14,"endColumn":2},{"ruleId":"91","severity":1,"message":"106","line":15,"column":13,"nodeType":"93","messageId":"94","endLine":15,"endColumn":16},{"ruleId":"99","severity":1,"message":"107","line":32,"column":1,"nodeType":"101","endLine":39,"endColumn":3},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["110"],"no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","'QuaggaInit' is assigned a value but never used.","'_scannerIsRunning' is assigned a value but never used.","'useState' is defined but never used.",["111"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'value' is assigned a value but never used.","'data' is assigned a value but never used.","'axios' is defined but never used.","Unexpected default export of anonymous function","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},"Update the dependencies array to be: [props]",{"range":"115","text":"116"},{"range":"117","text":"116"},[536,538],"[props]",[400,402]]